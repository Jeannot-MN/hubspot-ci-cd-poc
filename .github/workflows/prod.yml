name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'bump type, major or minor or patch or empty string'
        default: 'patch'
        required: true

jobs:
  Create_Release:
    outputs:
      version: ${{ steps.tag.outputs.next_version }}
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create release
        id: tag
        uses: MeilCli/bump-release-action@v1
        with:
          config_path: '.github/bump.yml'
          bump: ${{ github.event.inputs.bump }}
          dry_run: 'false'
          draft: 'false'
          pre_release: 'false'
  
  Deploy_Native_Modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2      
      - uses: HubSpot/hubspot-cms-deploy-action@v1.6
        with:
          src_dir: src/native
          dest_dir: /
          portal_id: ${{ secrets.HUBSPOT_PORTAL_ID }}
          personal_access_key: ${{ secrets.HUBSPOT_PERSONAL_ACCESS_KEY }}

  Get_All_React_Modules:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs
        run: |
          cd src/react
          echo "dir=$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  Deploy_React_Module:
    runs-on: ubuntu-latest
    env:
      HUBSPOT_PORTAL_ID: ${{ secrets.HUBSPOT_PORTAL_ID }}
      HUBSPOT_PERSONAL_ACCESS_KEY: ${{ secrets.HUBSPOT_PERSONAL_ACCESS_KEY }}
    needs: [Get_All_React_Modules]
    strategy:
      matrix:
        dir: ${{fromJson(needs.Get_All_React_Modules.outputs.dir)}}
    steps:
      - uses: actions/checkout@v2
      - run: |
          cd src/react/${{matrix.dir}}
          yarn install
          yarn build
          yarn hs upload dist ${{matrix.dir}} --use-env

  Print_Deployed_Version:
    needs: [Create_Release, Deploy_Native_Modules, Deploy_React_Module]
    runs-on: ubuntu-latest
    steps:
      - name: Echo version
        run: echo ${{ needs.Create_Release.outputs.version }}